name: Unit test - PR
run-name: (PR - ${{ github.head_ref  }} -> ${{ github.base_ref  }} ) - Unit testing

on:
  workflow_dispatch:
  pull_request:
    branches: main

jobs:
#  pr-unit-testing:
#    runs-on: ubuntu-latest
#    container: ghcr.io/cirruslabs/flutter:latest
#    steps:
#      - uses: actions/checkout@v4
#
##        // run dart build runner
#
#      - name: Install dependencies
#        run: flutter pub get
#
#      - name: Run Unit Tests
#        run: flutter test --file-reporter "json:tests/json"
#
#      - name: Archive test results
#        uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: test-results
#          path: tests/json

  pr-integration-testing:
#    needs: pr-unit-testing
    runs-on: ubuntu-latest
    container: ghcr.io/cirruslabs/flutter:stable
    env:
      apiLevel: "35"
      target: "google_apis"
      arch: "x86_64"
      deviceName: "android_emulator"
      deviceType: "pixel"
    steps:
      - uses: actions/checkout@v4

      - name: Install project dependencies
        run: |
          ls
          flutter pub get

      - name: Install emulator
        run: |
          sdkmanager "platform-tools" "platforms;android-${{ env.apiLevel }}" "emulator"
          sdkmanager --install "system-images;android-${{ env.apiLevel }};${{ env.target }};${{ env.arch }}"
          sdkmanager --update
          echo "y" | sdkmanager --licenses

      - name: Create AVD directory
        run: mkdir -p ~/.android/avd

      - name: Set up Android SDK environment
        run: |
          echo $HOME
          echo "ANDROID_HOME=$HOME/$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          ls $ANDROID_HOME
          echo "ANDROID_AVD_HOME=$HOME/.android/" >> $GITHUB_ENV

      - name: create avd
        run: echo "no" | avdmanager -v create avd --force --name "android_emulator" --package "system-images;android-${{ env.apiLevel }};${{ env.target }};${{ env.arch }}" --tag "${{ env.target }}" --sdcard 128M --device "${{ env.deviceType }}"

      - name: list directory emulators
        run: ls ~/.android/avd

      - name: list emulators
        run: |
          emulator -list-avds

      - name: run emulator
        run: |
          nohup emulator -avd "${{ env.deviceName }}" -no-audio -no-window -no-snapstorage -no-snapshot -gpu swiftshader_indirect -no-boot-anim -no-accel -wipe-data -skip-adb-auth &
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'

      - name: flutter doctor
        run: flutter doctor -v

      - name: flutter test
        run: |
          adb forward tcp:5037 tcp:5037
          ls
          adb devices
          adb_emulator_id=$(adb devices | grep emulator | awk '{print $1}')
          echo $adb_emulator_id
          flutter test --machine -d "$adb_emulator_id" integration_test --verbose
          
